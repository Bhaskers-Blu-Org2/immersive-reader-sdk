/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2019-10-07 22:28:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"utf-8\" />\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n");
      out.write("    <title> - QuickstartSampleWebApp</title>\n");
      out.write("        <link rel=\"stylesheet\" href=\"/resources/bootstrap.css\" />\n");
      out.write("        <link rel=\"stylesheet\" href=\"/resources/site.css\" />\n");
      out.write("        <script type='text/javascript' src='https://contentstorage.onenote.office.net/onenoteltir/immersivereadersdk/immersive-reader-sdk.0.0.3.js'></script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    <nav class=\"navbar navbar-inverse navbar-fixed-top\">\n");
      out.write("        <div class=\"container\">\n");
      out.write("            <div class=\"navbar-header\">\n");
      out.write("                <button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\".navbar-collapse\">\n");
      out.write("                    <span class=\"sr-only\">Toggle navigation</span>\n");
      out.write("                    <span class=\"icon-bar\"></span>\n");
      out.write("                    <span class=\"icon-bar\"></span>\n");
      out.write("                    <span class=\"icon-bar\"></span>\n");
      out.write("                </button>\n");
      out.write("                <a class=\"navbar-brand\" href=\"/\">QuickstartSampleWebApp</a>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"navbar-collapse collapse\">\n");
      out.write("                <ul class=\"nav navbar-nav\">\n");
      out.write("                    <li><a href=\"/\">Home</a></li>\n");
      out.write("                </ul>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </nav>\n");
      out.write("    <div class=\"container body-content\">\n");
      out.write("\n");
      out.write("    <meta name='viewport' content='width=device-width, initial-scale=1'>\n");
      out.write("\n");
      out.write("    <h1 id='title'>Geography</h1>\n");
      out.write("    <span id='content'>\n");
      out.write("        <p>The study of Earth's landforms is called physical geography. Landforms can be mountains and valleys. They can also be glaciers, lakes or rivers. Landforms are sometimes called physical features. It is important for students to know about the physical geography of Earth. The seasons, the atmosphere and all the natural processes of Earth affect where people are able to live. Geography is one of a combination of factors that people use to decide where they want to live.</p>\n");
      out.write("        <p>The physical features of a region are often rich in resources. Within a nation, mountain ranges become natural borders for settlement areas. In the U.S., major mountain ranges are the Sierra Nevada, the Rocky Mountains, and the Appalachians.</p>\n");
      out.write("        <p>Fresh water sources also influence where people settle. People need water to drink. They also need it for washing. Throughout history, people have settled near fresh water. Living near a water source helps ensure that people have the water they need. There was an added bonus, too. Water could be used as a travel route for people and goods. Many Americans live near popular water sources, such as the Mississippi River, the Colorado River and the Great Lakes.</p>\n");
      out.write("        <p>Mountains and deserts have been settled by fewer people than the plains areas. However, they have valuable resources of their own.</p>\n");
      out.write("    </span>\n");
      out.write("\n");
      out.write("    <button onclick='handleLaunchImmersiveReader()'>\n");
      out.write("        Immersive Reader\n");
      out.write("    </button>\n");
      out.write("\n");
      out.write("    <script type='text/javascript'>\n");
      out.write("        function getImmersiveReaderTokenAsync() {\n");
      out.write("          return new Promise((resolve, reject) => {\n");
      out.write("              $.ajax({\n");
      out.write("                  url: '/getAuthTokenServlet',\n");
      out.write("                  type: 'GET',\n");
      out.write("                  success: token => {\n");
      out.write("                      resolve(JSON.parse(token).access_token);\n");
      out.write("                  },\n");
      out.write("                  error: err => {\n");
      out.write("                      console.log('Error in getting token!', err);\n");
      out.write("                      reject(err);\n");
      out.write("                  }\n");
      out.write("              });\n");
      out.write("          });\n");
      out.write("\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        async function handleLaunchImmersiveReader() {\n");
      out.write("            const data = {\n");
      out.write("                title: document.getElementById('title').innerText,\n");
      out.write("                chunks: [ {\n");
      out.write("                    content: document.getElementById('content').innerText,\n");
      out.write("                    lang: 'en'\n");
      out.write("                } ]\n");
      out.write("            };\n");
      out.write("\n");
      out.write("            const options = {\n");
      out.write("                uiZIndex: 1000000\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            const token = await getImmersiveReaderTokenAsync();\n");
      out.write("\n");
      out.write("            ImmersiveReader.launchAsync(token, '");
      out.print( Microsoft.ImmersiveReader.Constants.SUBDOMAIN );
      out.write("', data, options)\n");
      out.write("                .then(() => {\n");
      out.write("                    console.log('success');\n");
      out.write("                }, (error) => {\n");
      out.write("                    console.log('error! ' + error);\n");
      out.write("                });\n");
      out.write("        }\n");
      out.write("    </script>\n");
      out.write("        <hr />\n");
      out.write("        <footer>\n");
      out.write("            <p>&copy; 2019 - QuickstartSampleWebApp</p>\n");
      out.write("        </footer>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <script src=\"//code.jquery.com/jquery-1.11.0.min.js\"></script>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
