/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2019-11-25 07:48:38 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset='utf-8'>\r\n");
      out.write("    <title>Immersive Reader C# Quickstart</title>\r\n");
      out.write("    <meta name='viewport' content='width=device-width, initial-scale=1'>\r\n");
      out.write("\r\n");
      out.write("    <script type='text/javascript' src='https://code.jquery.com/jquery-3.3.1.min.js'></script>\r\n");
      out.write("    <script type='text/javascript'\r\n");
      out.write("            src='https://contentstorage.onenote.office.net/onenoteltir/immersivereadersdk/immersive-reader-sdk.0.0.3.js'></script>\r\n");
      out.write("    <!-- A polyfill for Promise is needed for IE11 support -->\r\n");
      out.write("    <script type='text/javascript' src='https://cdn.jsdelivr.net/npm/promise-polyfill@8/dist/polyfill.min.js'></script>\r\n");
      out.write("\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"/resources/styles.css\"/>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <header id='ir-button-area'>\r\n");
      out.write("        <button class='immersive-reader-button' data-button-style='iconAndText'\r\n");
      out.write("                onclick='handleLaunchImmersiveReader()'></button>\r\n");
      out.write("    </header>\r\n");
      out.write("    <main id='content-area'>\r\n");
      out.write("        <article id='ir-content'>\r\n");
      out.write("            <h1 id='ir-title'>Geography</h1>\r\n");
      out.write("            <div id='ir-text'>\r\n");
      out.write("                <p>The study of Earth's landforms is called physical geography. Landforms can be mountains and valleys. They\r\n");
      out.write("                    can also be glaciers, lakes or rivers. Landforms are sometimes called physical features. It is important\r\n");
      out.write("                    for students to know about the physical geography of Earth. The seasons, the atmosphere and all the\r\n");
      out.write("                    natural processes of Earth affect where people are able to live. Geography is one of a combination of\r\n");
      out.write("                    factors that people use to decide where they want to live.</p>\r\n");
      out.write("                <p>The physical features of a region are often rich in resources. Within a nation, mountain ranges become\r\n");
      out.write("                    natural borders for settlement areas. In the U.S., major mountain ranges are the Sierra Nevada, the\r\n");
      out.write("                    Rocky Mountains, and the Appalachians.</p>\r\n");
      out.write("                <p>Fresh water sources also influence where people settle. People need water to drink. They also need it for\r\n");
      out.write("                    washing. Throughout history, people have settled near fresh water. Living near a water source helps\r\n");
      out.write("                    ensure that people have the water they need. There was an added bonus, too. Water could be used as a\r\n");
      out.write("                    travel route for people and goods. Many Americans live near popular water sources, such as the\r\n");
      out.write("                    Mississippi River, the Colorado River and the Great Lakes.</p>\r\n");
      out.write("                <p>Mountains and deserts have been settled by fewer people than the plains areas. However, they have\r\n");
      out.write("                    valuable resources of their own.</p>\r\n");
      out.write("            </div>\r\n");
      out.write("        </article>\r\n");
      out.write("    </main>\r\n");
      out.write("\r\n");
      out.write("    <div id='message'></div>\r\n");
      out.write("\r\n");
      out.write("    <script type='text/javascript'>\r\n");
      out.write("        function handleLaunchImmersiveReader() {\r\n");
      out.write("            $('#message').hide();\r\n");
      out.write("\r\n");
      out.write("            getTokenAndSubdomainAsync().then(function (response) {\r\n");
      out.write("                const token = response['token'];\r\n");
      out.write("                const subdomain = response['subdomain'];\r\n");
      out.write("\r\n");
      out.write("                const data = {\r\n");
      out.write("                    title: $('#ir-title').text().trim(),\r\n");
      out.write("                    chunks: [{\r\n");
      out.write("                        content: $('#ir-text').text().trim(),\r\n");
      out.write("                        lang: 'en',\r\n");
      out.write("                        mimeType: 'text/plain'\r\n");
      out.write("                    }]\r\n");
      out.write("                };\r\n");
      out.write("\r\n");
      out.write("                const options = {\r\n");
      out.write("                    'onExit': exitCallback\r\n");
      out.write("                };\r\n");
      out.write("\r\n");
      out.write("                ImmersiveReader.launchAsync(token, subdomain, data, options)\r\n");
      out.write("                    .catch((error) => {\r\n");
      out.write("                        $('#message').text('Error in launching the Immersive Reader. Check the console.').show();\r\n");
      out.write("                        console.log(error);\r\n");
      out.write("                    });\r\n");
      out.write("            })\r\n");
      out.write("            .catch(function (err) {\r\n");
      out.write("                $('#message').text('Error in getting the Immersive Reader token and subdomain. Check the console.').show();\r\n");
      out.write("                console.log(err);\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function exitCallback() {\r\n");
      out.write("            console.log('This is the callback function.');\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function getTokenAndSubdomainAsync() {\r\n");
      out.write("            return new Promise(function (resolve, reject) {\r\n");
      out.write("                $.ajax({\r\n");
      out.write("                    url: '/getAuthTokenServlet',\r\n");
      out.write("                    type: 'GET',\r\n");
      out.write("                    success: function (response) {\r\n");
      out.write("                        const data = JSON.parse(response);\r\n");
      out.write("\r\n");
      out.write("                        if (data.error) {\r\n");
      out.write("                            reject(data.error);\r\n");
      out.write("                        } else {\r\n");
      out.write("                            const token = data['access_token'];\r\n");
      out.write("                            const subdomain = '");
      out.print( Microsoft.ImmersiveReader.GetAuthTokenServlet.SUBDOMAIN );
      out.write("';\r\n");
      out.write("                            resolve({token, subdomain});\r\n");
      out.write("                        }\r\n");
      out.write("                    },\r\n");
      out.write("                    error: function (err) {\r\n");
      out.write("                        reject(err);\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
